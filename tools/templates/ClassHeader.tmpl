/* mbed Microcontroller Library
 * Copyright (c) 2006-2017 ARM Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

#ifndef MBED_{{name|upper}}_H
#define MBED_{{name|upper}}_H

namespace mbed {

/**
 * @class {{name}}
 {% if group is defined -%}
 * @addtogroup {{group}}
 {% endif -%}
 */
class {{name}} {
public:
        {% for name, decl in public.iteritems() -%}
        {% if decl is mapping -%}
        {% for returntype, args in decl.iteritems() -%}
        /**
         {% for arg in args -%}
         * @param[in] {{arg[1]}}
         {% endfor -%}
         * @return
         */
        {% set comma = joiner(", ") -%}
        {{returntype}} {{name}}({%- for arg in args -%}
                {{comma()}}{{arg[0]}}
                {%- if arg[0][-1] != "*" %} {% endif -%}
                {{arg[1]}}
                {%- if arg[2] %}={{arg[2]}}{% endif -%}
                {%- endfor -%});

        {% endfor -%}
        {% else -%}
        {{decl}} {{name}};
        {% endif -%}
        {% endfor %}
private:
        {% for name, decl in private.iteritems() -%}
        {% if decl is mapping %}
        {% for returntype, args in decl.iteritems() -%}
        /**
         {% for arg in args -%}
         * @param[in] {{arg[1]}}
         {% endfor -%}
         * @return
         */
        {% set comma = joiner(", ") -%}
        {{returntype}} {{name}}({%- for arg in args -%}
                {{comma()}}{{arg[0]}}
                {%- if arg[0][-1] != "*" %} {% endif -%}
                {{arg[1]}}
                {%- if arg[2] %}={{arg[2]}}{% endif -%}
                {%- endfor -%});

        {% endfor -%}
        {% else %}
        {{decl}} {{name}};
        {% endif -%}
        {% endfor %}
}

} //namespace mbed

#endif /* MBED_{{name|upper}}_H
